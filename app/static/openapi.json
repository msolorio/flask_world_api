{
  "swagger": "2.0",
  "info": {
    "description": "An API for searching automobile and user data",
    "version": "1.0.0",
    "title": "Autos API"
  },
  "basePath": "/api",
  "schemes": [
    "http"
  ],
  "paths": {
    "/countries": {
      "get": {
        "tags": [
          "countries"
        ],
        "summary": "Index - get all countries that meet a particular criteria",
        "operationId": "allCountries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "filter countries by general search term",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "filter by country name",
            "required": false,
            "type": "string"
          },
          {
            "name": "continent",
            "in": "query",
            "description": "filter by continent",
            "required": false,
            "type": "string"
          },
          {
            "name": "governmentform",
            "in": "query",
            "description": "filter by form of government",
            "required": false,
            "type": "string"
          },
          {
            "name": "population",
            "in": "query",
            "description": "filter by less than/greater than population value ( ie. gt:1000000 or lt:10000 )",
            "required": false,
            "type": "string"
          },
          {
            "name": "surfacearea",
            "in": "query",
            "description": "filter by less than/greater than surface area in square km ( ie. gt:10000000 or lt:100 )",
            "required": false,
            "type": "string"
          },
          {
            "name": "lifeexpectancy",
            "in": "query",
            "description": "filter by less than/greater than life expectancy value in years ( ie. gt:80 or lt:40 )",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      },
      "post": {
        "tags": [
          "countries"
        ],
        "summary": "Create - create an country",
        "description": "",
        "operationId": "createCountry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "country",
            "description": "properties and values for new country",
            "schema": {
              "required": [
                "code",
                "name",
                "continent",
                "region",
                "surfacearea",
                "population",
                "localname",
                "governmentform",
                "code2"
              ],
              "properties": {
                "code": {
                  "type": "string",
                  "default": "AAA"
                },
                "name": {
                  "type": "string",
                  "default": "Sveltendorf"
                },
                "continent": {
                  "type": "string",
                  "default": "Imaginlandia"
                },
                "region": {
                  "type": "string",
                  "default": "North Imaginlandia"
                },
                "surfacearea": {
                  "type": "integer",
                  "default": "1000000"
                },
                "population": {
                  "type": "integer",
                  "default": 5
                },
                "localname": {
                  "type": "string",
                  "default": "Sveltendorf"
                },
                "governmentform": {
                  "type": "string",
                  "default": "Republic"
                },
                "code2": {
                  "type": "string",
                  "default": "AA"
                },
                "indepyear": {
                  "type": "integer",
                  "default": 1881
                },
                "capital_id": {
                  "type": "integer",
                  "default": 1234
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "400": {
            "description": "invalid input"
          }
        }
      }
    },
    "/countries/{countrycode}": {
      "get": {
        "tags": [
          "countries"
        ],
        "summary": "Show - get a country by it's country code",
        "description": "Returns a single country",
        "operationId": "getCountry",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "countrycode",
            "in": "path",
            "description": "country code of country to return",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Country"
            }
          },
          "404": {
            "description": "No country with that country code"
          }
        }
      },
      "patch": {
        "tags": [
          "countries"
        ],
        "summary": "Update - update an existing country by it's country code",
        "description": "",
        "operationId": "updateCountry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "countrycode",
            "in": "path",
            "description": "country code of country to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "country",
            "description": "The properties to update ( name, continent, region, surfacearea, indepyear, population, lifeexpectancy, localname, governmentform, capital_id, code2 )",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/Country"
            }
          },
          "400": {
            "description": "invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "countries"
        ],
        "summary": "Delete - delete an existing country",
        "description": "",
        "operationId": "deleteCountry",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "countrycode",
            "in": "path",
            "description": "Country code of country to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "No country found with that id"
          }
        }
      }
    },
    "/cities": {
      "get": {
        "tags": [
          "cities"
        ],
        "summary": "Index - get all cities that meet a particular criteria",
        "operationId": "allCities",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "search",
            "in": "query",
            "description": "Filter cities by general search term",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Filter by city name",
            "required": false,
            "type": "string"
          },
          {
            "name": "country",
            "in": "query",
            "description": "Filter cities by country",
            "required": false,
            "type": "string"
          },
          {
            "name": "population",
            "in": "query",
            "description": "Filter by less than/greater than population value ( ie. gt:1000000 or lt:10000 )",
            "required": false,
            "type": "string"
          },
          {
            "name": "capitalof",
            "in": "query",
            "description": "Get the capital of a given country (returns an array of a single city)",
            "required": false,
            "type": "string"
          },
          {
            "name": "district",
            "in": "query",
            "description": "Filter by a district name",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          }
        }
      },
      "post": {
        "tags": [
          "cities"
        ],
        "summary": "Create - create a city",
        "description": "",
        "operationId": "createCountry",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "country",
            "description": "properties and values for new city",
            "schema": {
              "required": [
                "name",
                "countrycode",
                "district",
                "population"
              ],
              "properties": {
                "name": {
                  "type": "string",
                  "default": "Waterby"
                },
                "countrycode": {
                  "type": "string",
                  "default": "AAA"
                },
                "district": {
                  "type": "string",
                  "default": "Lakeside"
                },
                "population": {
                  "type": "integer",
                  "default": 5
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/City"
            }
          },
          "400": {
            "description": "invalid input"
          }
        }
      }
    },
    "/cities/{city_id}": {
      "get": {
        "tags": [
          "cities"
        ],
        "summary": "Show - get a city by it's id",
        "description": "Returns a single city",
        "operationId": "getCity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "city_id",
            "in": "path",
            "description": "id of city to return",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/City"
            }
          },
          "404": {
            "description": "No city with that id found"
          }
        }
      },
      "patch": {
        "tags": [
          "cities"
        ],
        "summary": "Update - update an existing city by it's id",
        "description": "",
        "operationId": "updateCity",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "city_id",
            "in": "path",
            "description": "id of city to update",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "city",
            "description": "The properties to update ( name, countrycode, district, population )",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "success",
            "schema": {
              "$ref": "#/definitions/City"
            }
          },
          "400": {
            "description": "invalid input"
          }
        }
      },
      "delete": {
        "tags": [
          "cities"
        ],
        "summary": "Delete - delete an existing country",
        "description": "",
        "operationId": "deleteCity",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "city_id",
            "in": "path",
            "description": "Id of city to delete",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "success"
          },
          "404": {
            "description": "No city found with that id"
          }
        }
      }
    }
  },
  "definitions": {
    "Country": {
      "type": "object",
      "required": [
        "code",
        "name",
        "continent",
        "region",
        "surfacearea",
        "population",
        "localname",
        "governmentform",
        "code2"
      ],
      "properties": {
        "code": {
          "type": "string",
          "description": "A unique three digit string identifying the country"
        },
        "name": {
          "type": "string",
          "description": "The name of the country"
        },
        "continent": {
          "type": "string",
          "description": "The continent of the country"
        },
        "region": {
          "type": "string",
          "description": "The region of the country"
        },
        "surfacearea": {
          "type": "integer",
          "description": "The surface area of the country in square km"
        },
        "population": {
          "type": "integer",
          "description": "The population of the country"
        },
        "localname": {
          "type": "string",
          "description": "The locally used name of the country"
        },
        "governmentform": {
          "type": "string",
          "description": "The government form of the country"
        },
        "code2": {
          "type": "string",
          "description": "A unique two digit string identifying the country"
        },
        "indepyear": {
          "type": "integer",
          "description": "The independence year of the country"
        },
        "capital_id": {
          "type": "integer",
          "description": "The city id of the capital city of the country"
        }
      }
    },
    "City": {
      "type": "object",
      "required": [
        "id",
        "name",
        "countrycode",
        "district",
        "population"
      ],
      "properties": {
        "id": {
          "type": "integer",
          "description": "A unique id for city assigned by database"
        },
        "name": {
          "type": "string",
          "description": "The name of the city"
        },
        "countrycode": {
          "type": "string",
          "description": "The country code for the country the city is located in"
        },
        "district": {
          "type": "string",
          "description": "The district of the"
        },
        "population": {
          "type": "integer",
          "description": "The population of the country"
        }
      }
    }
  }
}